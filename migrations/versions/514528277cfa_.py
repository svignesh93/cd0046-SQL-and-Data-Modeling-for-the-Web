"""empty message

Revision ID: 514528277cfa
Revises: 40c6b2e0969a
Create Date: 2022-05-10 22:28:23.426405

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '514528277cfa'
down_revision = '40c6b2e0969a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Show',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('venue_id', sa.Integer(), nullable=False),
        sa.Column('artist_id', sa.Integer(), nullable=False),
        sa.Column('start_time', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['artist_id'], ['Artist.id']),
        sa.ForeignKeyConstraint(['venue_id'], ['Venue.id']),
        sa.PrimaryKeyConstraint('id')
    )

    artist = sa.sql.table('Artist',
        sa.sql.column('name', sa.String()),
        sa.sql.column('city', sa.String(length=120)),
        sa.sql.column('state', sa.String(length=120)),
        sa.sql.column('genres', sa.ARRAY(sa.String())),
        sa.sql.column('seeking_venue', sa.Boolean())
    )
    op.add_column('Artist', sa.Column('website_link', sa.String(length=120), nullable=True))
    op.add_column('Artist', sa.Column('seeking_venue', sa.Boolean(), nullable=True))
    op.execute(artist.update()
        .where(sa.text('seeking_venue IS NULL'))
        .values({'seeking_venue':op.inline_literal(False)})
    )
    op.alter_column('Artist', 'seeking_venue', nullable=False)
    op.add_column('Artist', sa.Column('seeking_description', sa.String(length=120), nullable=True))
    op.alter_column('Artist', 'name',
               existing_type=sa.String(),
               nullable=True)
    op.execute(artist.update()
        .where(sa.text('name IS NULL'))
        .values({'name':op.inline_literal('')})
    )
    op.alter_column('Artist', 'name', nullable=False)
    op.alter_column('Artist', 'city',
               existing_type=sa.String(length=120),
               nullable=True)
    op.execute(artist.update()
        .where(sa.text('city IS NULL'))
        .values({'city':op.inline_literal('')})
    )
    op.alter_column('Artist', 'city', nullable=False)
    op.alter_column('Artist', 'state',
               existing_type=sa.String(length=120),
               nullable=True)
    op.execute(artist.update()
        .where(sa.text('state IS NULL'))
        .values({'state':op.inline_literal('')})
    )
    op.alter_column('Artist', 'state', nullable=False)
    op.alter_column('Artist', 'genres', nullable=True)
    op.execute(artist.update()
        .where(sa.text('genres IS NULL'))
        .values(genres = [])
    )
    op.alter_column(
        'Artist', 
        'genres', 
        nullable=False, 
        default=[]
    )
    op.execute("ALTER TABLE \"Artist\" ALTER COLUMN genres TYPE character varying[] USING genres::character varying[]")
    
    venue = sa.sql.table('Venue',
        sa.sql.column('name', sa.String()),
        sa.sql.column('city', sa.String(length=120)),
        sa.sql.column('state', sa.String(length=120)),
        sa.sql.column('address', sa.String(length=120)),
        sa.sql.column('genres', sa.ARRAY(sa.String())),
        sa.sql.column('seeking_talent', sa.Boolean())
    )
    op.add_column('Venue', sa.Column('genres', sa.ARRAY(sa.String()), nullable=True, default=[]))
    op.execute(venue.update()
        .where(sa.text('genres IS NULL'))
        .values(genres = [])
    )
    op.alter_column('Venue', 'genres', nullable=False)
    op.add_column('Venue', sa.Column('website_link', sa.String(length=120), nullable=True))
    op.add_column('Venue', sa.Column('seeking_talent', sa.Boolean(), nullable=True))
    op.execute(venue.update()
        .where(sa.text('seeking_talent IS NULL'))
        .values({'seeking_talent':op.inline_literal(False)})
    )
    op.alter_column('Venue', 'seeking_talent', nullable=False)
    op.add_column('Venue', sa.Column('seeking_description', sa.String(length=120), nullable=True))
    op.alter_column('Venue', 'name',
               existing_type=sa.String(),
               nullable=True)
    op.execute(venue.update()
        .where(sa.text('name IS NULL'))
        .values({'name':op.inline_literal('')})
    )
    op.alter_column('Venue', 'name', nullable=False)
    op.alter_column('Venue', 'city',
               existing_type=sa.String(length=120),
               nullable=True)
    op.execute(venue.update()
        .where(sa.text('city IS NULL'))
        .values({'city':op.inline_literal('')})
    )
    op.alter_column('Venue', 'city', nullable=False)
    op.alter_column('Venue', 'state',
               existing_type=sa.String(length=120),
               nullable=True)
    op.execute(venue.update()
        .where(sa.text('state IS NULL'))
        .values({'state':op.inline_literal('')})
    )
    op.alter_column('Venue', 'state', nullable=False)
    op.alter_column('Venue', 'address',
               existing_type=sa.String(length=120),
               nullable=True)
    op.execute(venue.update()
        .where(sa.text('address IS NULL'))
        .values({'address':op.inline_literal('')})
    )
    op.alter_column('Venue', 'address', nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('Venue', 'address',
               existing_type=sa.String(length=120),
               nullable=True)
    op.alter_column('Venue', 'state',
               existing_type=sa.String(length=120),
               nullable=True)
    op.alter_column('Venue', 'city',
               existing_type=sa.String(length=120),
               nullable=True)
    op.alter_column('Venue', 'name',
               existing_type=sa.String(),
               nullable=True)
    op.drop_column('Venue', 'seeking_description')
    op.drop_column('Venue', 'seeking_talent')
    op.drop_column('Venue', 'website_link')
    op.drop_column('Venue', 'genres')
    op.alter_column('Artist', 'genres',
               existing_type=sa.String(length=120),
               nullable=True)
    op.alter_column('Artist', 'state',
               existing_type=sa.String(length=120),
               nullable=True)
    op.alter_column('Artist', 'city',
               existing_type=sa.String(length=120),
               nullable=True)
    op.alter_column('Artist', 'name',
               existing_type=sa.String(),
               nullable=True)
    op.drop_column('Artist', 'seeking_description')
    op.drop_column('Artist', 'seeking_venue')
    op.drop_column('Artist', 'website_link')
    op.drop_table('Show')
    # ### end Alembic commands ###
